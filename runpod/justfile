# RunPod Container Management
# Usage: just <recipe>

# Default recipe - show available commands
default:
    @just --list

# === Local Development ===

# Build container locally
build:
    podman build --no-cache -t real-estate-processor:latest .

# Test container locally (basic import check)
test-local:
    #!/bin/bash
    # Load environment variables from parent .env file
    if [ -f ../.env ]; then
        export $(grep -v '^#' ../.env | xargs)
    else
        echo "Error: .env file not found in parent directory"
        exit 1
    fi
    
    echo "ðŸ§ª Testing container locally..."
    podman run --rm \
        -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
        -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
        -e AWS_REGION="us-east-1" \
        -e S3_BUCKET_VIDEOS="unpin-real-estate-videos" \
        -e S3_BUCKET_RESULTS="unpin-real-estate-results" \
        real-estate-processor:latest \
        python -c "import handler; print('âœ… Handler imports successfully')"

# === GitHub Container Registry ===

# Tag container for GHCR
tag GITHUB_USERNAME:
    podman tag real-estate-processor:latest ghcr.io/{{GITHUB_USERNAME}}/real-estate-processor:latest

# Login to GHCR (requires GITHUB_TOKEN env var)
login GITHUB_USERNAME:
    #!/bin/bash
    if [ -z "$GITHUB_TOKEN" ]; then
        echo "Error: GITHUB_TOKEN environment variable not set"
        echo "Create a GitHub Personal Access Token with package write permissions"
        exit 1
    fi
    
    echo $GITHUB_TOKEN | podman login ghcr.io -u {{GITHUB_USERNAME}} --password-stdin

# Push to GHCR
push GITHUB_USERNAME:
    podman push ghcr.io/{{GITHUB_USERNAME}}/real-estate-processor:latest

# === RunPod Integration ===

# List your RunPod templates
list-templates:
    #!/bin/bash
    # Load environment variables from parent .env file
    if [ -f ../.env ]; then
        export $(grep -v '^#' ../.env | xargs)
    else
        echo "Error: .env file not found in parent directory"
        exit 1
    fi
    
    if [ -z "$RUNPOD_API_KEY" ]; then
        echo "Error: RUNPOD_API_KEY not found in .env file"
        exit 1
    fi
    
    echo "ðŸ“‹ Listing your RunPod templates..."
    curl -X GET "https://rest.runpod.io/v1/templates" \
        -H "Authorization: Bearer $RUNPOD_API_KEY" \
        -H "Content-Type: application/json" | jq .

# Update RunPod template with new image
update-runpod GITHUB_USERNAME:
    #!/bin/bash
    # Load environment variables from parent .env file
    if [ -f ../.env ]; then
        export $(grep -v '^#' ../.env | xargs)
    else
        echo "Error: .env file not found in parent directory"
        exit 1
    fi
    
    if [ -z "$RUNPOD_API_KEY" ]; then
        echo "Error: RUNPOD_API_KEY not found in .env file"
        exit 1
    fi
    
    echo "ðŸ”„ Updating RunPod template with new image..."
    echo "Image: ghcr.io/{{GITHUB_USERNAME}}/real-estate-processor:latest"
    
    curl -X PATCH "https://rest.runpod.io/v1/templates/aikxgl3xhy" \
        -H "Authorization: Bearer $RUNPOD_API_KEY" \
        -H "Content-Type: application/json" \
        -d "{\"imageName\": \"ghcr.io/{{GITHUB_USERNAME}}/real-estate-processor:latest\"}" | jq .

# === Complete Workflow ===

# Build, tag, and push to GHCR (requires login first)
deploy GITHUB_USERNAME: build (tag GITHUB_USERNAME) (push GITHUB_USERNAME)
    echo "âœ… Container deployed to GHCR"

# Full deployment: build, push, and update RunPod
deploy-full GITHUB_USERNAME: (deploy GITHUB_USERNAME) (update-runpod GITHUB_USERNAME)
    echo "ðŸš€ Full deployment complete!"

# === Cleanup ===

# Remove local images
clean:
    podman rmi real-estate-processor:latest || true
    podman system prune -f
