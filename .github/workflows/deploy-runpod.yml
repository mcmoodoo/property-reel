name: Deploy to RunPod

on:
  push:
    branches: [dev]
    # paths:
    # - "runpod/**"
    # - ".github/workflows/deploy-runpod.yml"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/real-estate-processor

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker system prune -af
          df -h

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/dev' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./runpod
          file: ./runpod/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update RunPod Template
        if: github.ref == 'refs/heads/dev'
        env:
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
          TEMPLATE_ID: fmhv2snzok
        run: |
          echo "Updating RunPod template with new image..."
          echo "Previous image: $(curl -s -H "Authorization: Bearer $RUNPOD_API_KEY" "https://rest.runpod.io/v1/templates/$TEMPLATE_ID" | jq -r '.imageName')"
          echo "New image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          curl -X PATCH "https://rest.runpod.io/v1/templates/$TEMPLATE_ID" \
            -H "Authorization: Bearer $RUNPOD_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"imageName\": \"${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\"}"
